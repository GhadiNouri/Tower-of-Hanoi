import java.util.Stack;
import java.util.EmptyStackException;
public class Player //start of Player class
{
 private String name;
 private int move;
 //constructor
 public Player(String p)
 {
 setName(p);
 }
 //set&get method 
 public void setName(String n)
 {
 name=n; 
 }
 
 public String getName()
 {
 return name;
 }
 //operations on the movments depending on the rules of the game
 public void diskMovment(int t1,int t2,Stack<Integer> n1,Stack<Integer> n2,Stack<Integer> n3)
 {
 if (t2==1){
 if(t1==1){}
 
 if(t1==2) 
 
 if(n2.isEmpty()||n1.isEmpty()||n1.peek()>n2.peek())
 try{//catching the exeption of poping an empty stack
 n1.push(n2.pop());
 System.out.println(" moves: "+move());
 }catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
 System.out.println("wrong movment");
 
 if(t1==3 ){
 
 if(n3.isEmpty()||n1.isEmpty()||n1.peek()>n3.peek())
 try{
 n1.push(n3.pop());
 System.out.println(" moves: "+move());
 }catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
 System.out.println("wrong movment");
 }
 }
 
 if (t2==2)
if(t1==1){
 if(n1.isEmpty()||n2.isEmpty()||n2.peek()>n1.peek())
 try{
 n2.push(n1.pop());
 System.out.println(" moves: "+move());
 }catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
 System.out.println("wrong movment");}
 
 if(t1==2){}
 
 if(t1==3 ){
 
 if(n3.isEmpty()||n2.isEmpty()||n2.peek()>n3.peek())
 try{
 n2.push(n3.pop());
 System.out.println(" moves: "+move());
 }catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
 System.out.println("wrong movment");
 }
 }
 
 if (t2==3){
 if(t1==1){
 
 if(n1.isEmpty()||n3.isEmpty()||n3.peek()>n1.peek()) // r played in it 
 try{
 n3.push(n1.pop());
 System.out.println(" moves: "+move());
 }catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
 System.out.println("wrong movment");}
 
 if(t1==2)
 
 if(n3.isEmpty()||n2.isEmpty()||n3.peek()>n2.peek())
 try{
 n3.push(n2.pop());
 System.out.println(" moves: "+move());
 } catch(EmptyStackException e){
 System.out.println("It is empty. Try again");
 }
 else 
System.out.println("wrong movment");
 
 if(t1==3 ){}
 }
 }
 
 public int move(){
 return move++;//movment counter
 }
} //End of Player class
